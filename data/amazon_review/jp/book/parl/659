ユーザ の システム 部門 を 含め システム 構築 に かかわる 全て の 人必 読 の 書  ｓｏａ について 良く 書か れ て いる 。 システム 設計 する ため におさ て おく べき ポイント を きちん と 解説 し て いる し 、 それ を 踏まえ たうえ で 、 企業 システム を どう 設計 する か の 指針 を 示し て くれる 。 実装 志向 の 人 から 見る と 技術 が 古い とか 、 細部 が 弱い という 指摘 が ある かも しれ ない し 、 あるい は また 具体 的 な コード が ない こと に 不満 を もたれる かも しれ ない 。 しかし 、 システム 構築 の 本質 、 基本 は しっかり と 押さえ て おり 、 本当 の アーキテクト を 目指す 人 は ぜひ 読ん で おく べき １ 冊 だ といえる 。また 、 ユーザ 側 で システム 導入 を 考え て いる 人 、 特に ｃｉｏ にとって も 必読 の 書として お 奨め し たい 。
   過去 ２ ０ 年 の 技術 の 進歩 を 考える と 、 基本 ソフト 、 パッケージ の 進化 は 劇的 で 、 以前 と は 比べ物 に なら ない ほど システム を 作る の が 容易 に なっ た 。 加え て ハードウエア 性能 の 飛躍 的 向上 、 価格 の 大幅 な 低下 により 、 システム 化 できる 業務 領域 が 驚異 的 に 拡がっ た 。 その 結果 として 、 業務 システム を どう 構築 する かが 最大 の 課題 と なっ て き て いる 。 業務 が 複雑 で 全体 を 理解 できる 人 が ユーザサイド に もい ない の が 現状 で 、 これ が システム 構築 の リスク を 増大 する 結果 と なっ て いる 。
   ｓａｏ は おっざっぱ に 言え ば 、 オブジェクト 指向 の 延長 上 に ある 。 オブジェクト の 粒度 を 「サービス 」 という レベル に まで 粗く し た もの が ｓｏａ だ といえる 。 ただし 、 オブジェクト 指向 が 実装 ベース の 、 つまり 技術 者 視点 で の アプローチ で ある のに対し 、 ｓｏａ は 、 その 視座 を ユーザサイド に 移し た という 点 が 重要 で ある 。 そう だ から こそ ｓａｏ は 、 ユーザ 側 の 人 にとっ て も 、いや 、 ユーザ 側 の システム 担当 の 人 に こそ 必須 の 知識 領域 だ といえる 。 ||| must read for all people involved in the construction sector , including the system user 's system soa has been written about the good . and are properly described sateokubeki point to design your system , ue based thereon , a guide that shows you how to design a business system . from the perspective of older people or technology-oriented implementation , there may be details of a weak point , may settle a complaint that there is no specific code or addition . however , the nature of the system construction , the base is holding firm , those seeking a true architect of one zehi say it should read books . also , those considering the introduction of user-side system , especially recommend the cio must read for you as well . given the advances in technology over the past 20 years , basic software , is the dramatic evolution of the package , and previously was ridiculously easy to make anywhere near comparable to the system . dramatically improve the performance of hardware in addition , the significant decline in prices , has spread to the business areas that can be phenomenal system . as a result , has become the biggest challenge you do to build business systems . the situation is communicated to users who can not understand the whole complicated business , and the result is to increase the risk of building this system . sao haotsu roughly speaking , on the extension of object-oriented . the granularity of the object `` services '' are those who say rough it up to the level of soa . however , the implementation based on object-oriented , whereas the technical approach in that perspective , soa is moved to the side that it is important that the user perspective . sao so why , even for those of the user , no , say what it required knowledge of people space system by the user .