daring new way to teach c++ - successfully ! after having read this book i very much regret coming to c++ from a self-taught pascal and c background - it could have been so much easier . many introductory texts on c++ assume a background in one of the procedural languages and consequently start teaching the c subset of c++ first . this is , according to the authors ' experience , counterproductive to understanding 'proper ' c++ and programming true to it 's paradigms and design . thus they follow the radically new approach of discussing whatever ( sometimes advanced ) facilities c++ offers to solve a particular problem instead of going from one isolated language feature to the next . this leads to the somewhat unorthodox chapter sequence , which teaches the design of user types ( classes ) after introducing template functions ( a feature many seasoned c++ programmers still do n't know how to use effectively ) or even stranger : the explanation of pointers and arrays ( chapter 10 ) in terms of the standard library iterators and containers , which have been introduced as early as chapter 3 . what i particularly liked are the useful and real world examples , although the book does cover the omni-present 'hello world ' program , it otherwise fully delivers on it 's promise of teaching 'practical programming by example ' ( subtitle ) . due to this approach and the well constructed exercises at the end of each chapter the book gets the student writing non-trivial , useful programs taking full advantage of advanced c++ library features almost from day one . the authors also lead by example and show proper commenting and programming for flexibility techniques even in the smallest code fragments . this is in refreshing contrast to many an author 's crime of showing the 'quick and easy ' way first and the 'proper ' way later . if you read the design and evolution of c++ you 'll soon notice the repeated mentioning of koenig and moo as two of the key players in the development of the language . their in-depth knowledge and experience really shows in this work . although the book is mainly aimed at beginners , veteran c++ programmers can still profit from it , even if only by loosing some more bad old c habits